//Medium 2 

// Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.
 
// Example 1:
// Input: nums = [3,2,3]
// Output: [3]
// Example 2:
// Input: nums = [1]
// Output: [1]
// Example 3:
// Input: nums = [1,2]
// Output: [1,2]
 
// Constraints:
// 1 <= nums.length <= 5 * 104
// -109 <= nums[i] <= 109


import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class MajorityElements {

    public static List<Integer> majorityElements(int[] nums) {
        List<Integer> result = new ArrayList<>();

        int candidate1 = 0, candidate2 = 0, count1 = 0, count2 = 0;

        for (int num : nums) {
            if (candidate1 == num) {
                count1++;
            } else if (candidate2 == num) {
                count2++;
            } else if (count1 == 0) {
                candidate1 = num;
                count1 = 1;
            } else if (count2 == 0) {
                candidate2 = num;
                count2 = 1;
            } else {
                count1--;
                count2--;
            }
        }

        count1 = count2 = 0;

        for (int num : nums) {
            if (num == candidate1) {
                count1++;
            } else if (num == candidate2) {
                count2++;
            }
        }

        if (count1 > nums.length / 3) {
            result.add(candidate1);
        }
        if (count2 > nums.length / 3) {
            result.add(candidate2);
        }

        return result;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the size of the array: ");
        int size = scanner.nextInt();

        int[] nums = new int[size];
        System.out.println("Enter the elements of the array:");
        for (int i = 0; i < size; i++) {
            nums[i] = scanner.nextInt();
        }

        List<Integer> result = majorityElements(nums);

        System.out.println("Elements appearing more than n/3 times: " + result);
    }
}


// Boyer-Moore Majority Vote algorithm

//Explaination

/*majorityElements Method:

This method takes an integer array nums as input and returns a list of elements that appear more than ⌊ n/3 ⌋ times in the array.
It uses the Boyer-Moore Majority Vote algorithm, which tracks two potential candidates (candidate1 and candidate2) and their respective counts (count1 and count2).
main Method:

The main method handles user input. It prompts the user to enter the size of the array and then the elements of the array.
It creates an integer array based on the user input and calls the majorityElements method to find the elements that appear more than ⌊ n/3 ⌋ times.
Finally, it prints the elements that meet the criteria.
Algorithm Overview:

The algorithm iterates through the array to determine two potential candidates that might appear more than one-third of the time.
It then performs a second pass through the array to count the occurrences of these candidates and checks if they appear more than ⌊ n/3 ⌋ times.
If a candidate meets the criteria, it is added to the result list.
*/
